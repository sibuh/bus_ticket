// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.0
// source: token.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const getTicketInfo = `-- name: GetTicketInfo :one
SELECT u.first_name,u.last_name,t.trip_id FROM users u
INNER JOIN  tickets t 
ON u.id=t.user_id
WHERE u.id=$1
AND t.id=$2
`

type GetTicketInfoParams struct {
	ID   uuid.UUID
	ID_2 uuid.UUID
}

type GetTicketInfoRow struct {
	FirstName string
	LastName  string
	TripID    uuid.UUID
}

func (q *Queries) GetTicketInfo(ctx context.Context, arg GetTicketInfoParams) (GetTicketInfoRow, error) {
	row := q.db.QueryRow(ctx, getTicketInfo, arg.ID, arg.ID_2)
	var i GetTicketInfoRow
	err := row.Scan(&i.FirstName, &i.LastName, &i.TripID)
	return i, err
}

const getTokenData = `-- name: GetTokenData :one
select u.id,
    t.id
from users u
    INNER JOIN tickets t on t.user_id = u.id
`

type GetTokenDataRow struct {
	ID   uuid.UUID
	ID_2 uuid.UUID
}

func (q *Queries) GetTokenData(ctx context.Context) (GetTokenDataRow, error) {
	row := q.db.QueryRow(ctx, getTokenData)
	var i GetTokenDataRow
	err := row.Scan(&i.ID, &i.ID_2)
	return i, err
}
