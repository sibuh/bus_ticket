// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: tickets.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const getTicket = `-- name: GetTicket :one
SELECT id, trip_id, bus_id, user_id, status from tickets where id=$1
`

func (q *Queries) GetTicket(ctx context.Context, id uuid.UUID) (Ticket, error) {
	row := q.db.QueryRow(ctx, getTicket, id)
	var i Ticket
	err := row.Scan(
		&i.ID,
		&i.TripID,
		&i.BusID,
		&i.UserID,
		&i.Status,
	)
	return i, err
}

const updateTicketStatus = `-- name: UpdateTicketStatus :one
UPDATE tickets SET status =$1 WHERE id=$2 RETURNING id, trip_id, bus_id, user_id, status
`

type UpdateTicketStatusParams struct {
	Status string
	ID     uuid.UUID
}

func (q *Queries) UpdateTicketStatus(ctx context.Context, arg UpdateTicketStatusParams) (Ticket, error) {
	row := q.db.QueryRow(ctx, updateTicketStatus, arg.Status, arg.ID)
	var i Ticket
	err := row.Scan(
		&i.ID,
		&i.TripID,
		&i.BusID,
		&i.UserID,
		&i.Status,
	)
	return i, err
}
