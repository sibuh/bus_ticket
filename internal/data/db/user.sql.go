// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.0
// source: user.sql

package db

import (
	"context"
)

const getUser = `-- name: GetUser :one
SELECT id, first_name, last_name, phone, email, nonce, payment_status, session_id, check_in, created_at, updated_at FROM users WHERE nonce=$1
`

func (q *Queries) GetUser(ctx context.Context, nonce string) (User, error) {
	row := q.db.QueryRow(ctx, getUser, nonce)
	var i User
	err := row.Scan(
		&i.ID,
		&i.FirstName,
		&i.LastName,
		&i.Phone,
		&i.Email,
		&i.Nonce,
		&i.PaymentStatus,
		&i.SessionID,
		&i.CheckIn,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const registerPayedUser = `-- name: RegisterPayedUser :one
INSERT INTO users (first_name,last_name,phone,email,nonce,session_id) VALUES ($1,$2,$3,$4,$5,$6)
RETURNING id, first_name, last_name, phone, email, nonce, payment_status, session_id, check_in, created_at, updated_at
`

type RegisterPayedUserParams struct {
	FirstName string
	LastName  string
	Phone     string
	Email     string
	Nonce     string
	SessionID string
}

func (q *Queries) RegisterPayedUser(ctx context.Context, arg RegisterPayedUserParams) (User, error) {
	row := q.db.QueryRow(ctx, registerPayedUser,
		arg.FirstName,
		arg.LastName,
		arg.Phone,
		arg.Email,
		arg.Nonce,
		arg.SessionID,
	)
	var i User
	err := row.Scan(
		&i.ID,
		&i.FirstName,
		&i.LastName,
		&i.Phone,
		&i.Email,
		&i.Nonce,
		&i.PaymentStatus,
		&i.SessionID,
		&i.CheckIn,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const updatePaymentStatus = `-- name: UpdatePaymentStatus :one
UPDATE users SET payment_status=$1 WHERE session_id=$2 RETURNING id, first_name, last_name, phone, email, nonce, payment_status, session_id, check_in, created_at, updated_at
`

type UpdatePaymentStatusParams struct {
	PaymentStatus string
	SessionID     string
}

func (q *Queries) UpdatePaymentStatus(ctx context.Context, arg UpdatePaymentStatusParams) (User, error) {
	row := q.db.QueryRow(ctx, updatePaymentStatus, arg.PaymentStatus, arg.SessionID)
	var i User
	err := row.Scan(
		&i.ID,
		&i.FirstName,
		&i.LastName,
		&i.Phone,
		&i.Email,
		&i.Nonce,
		&i.PaymentStatus,
		&i.SessionID,
		&i.CheckIn,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
