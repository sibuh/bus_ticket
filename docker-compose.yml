version: '3.9'

services:

  cockroachdb:
    image: cockroachdb/cockroach:v22.2.0
    container_name: cockroach
    # command: ["start-single-node", "--insecure"]    
    ports:
      - "26257:26257"
      - "8080:8080"
    volumes:
      - cockroach-data:/cockroach/cockroach-data
      - ./entrypoint.sh:/entrypoint.sh
    entrypoint: ["/entrypoint.sh"]
    networks:
      - ticket-network
    healthcheck:
      test: ["CMD", "cockroach", "sql", "--insecure", "--execute=SELECT 1"]
      interval: 5s
      timeout: 2s
      retries: 5

  # init-db:
  #   image: cockroachdb/cockroach:v22.2.0
  #   depends_on:
  #     cockroachdb:
  #       condition: service_healthy
  #   volumes:
  #     - ./init.sql:/init.sql
  #   command: ["sh", "-c", "sleep 10 && cockroach sql --insecure --host=cockroachdb:26257 < /init.sql"]


  migrate:
    image: migrate/migrate:latest
    depends_on:
      cockroachdb:
        condition: service_healthy 
    
    volumes:
      - ./internal/data/migrations:/migrations
    entrypoint: ["migrate", "-path", "/migrations", "-database", "cockroachdb://root@cockroachdb:26257/mydb?sslmode=disable","up"]


    networks:
      - ticket-network

  # app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   restart: always
  #   environment:
  #     - DB_HOST=cockroachdb
  #     - DB_PORT=26257
  #     - DB_USER=root
  #     - DB_PASSWORD=
  #     - DB_NAME=tickets
  #   ports:
  #     - 8081:8081
  #   depends_on:
  #     - cockroachdb
  #   networks:
  #     - ticket-network
    # command: ["go", "run", "main.go"]

  # migrate:
  #   image: migrate/migrate
  #   depends_on:
  #     - cockroachdb
  #   volumes:
  #     - ./interanl/data/migrations:/interanl/data/migrations  # Mount migration files
  #   entrypoint: [
  #     "/bin/sh", "-c",
  #     "migrate -path /internal/data/migrations -database 'postgres://root@cockroachdb:26257/tickets?sslmode=disable' up"
  #   ] 
     
volumes:
  cockroach-data:

networks:
  ticket-network: